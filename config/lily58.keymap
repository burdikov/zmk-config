/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        num {
            bindings = <&tog 3>;
            key-positions = <45 40>;
            require-prior-idle-ms = <200>;
        };

        space {
            bindings = <&space_base>;
            key-positions = <31 28>;
            slow-release;
            timeout-ms = <80>;
        };

        ru {
            bindings = <&rospech>;
            key-positions = <14 21>;
            layers = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <26 33>;
        };

        ru_mac {
            bindings = <&rospech_mac>;
            key-positions = <24 35>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <15 20>;
        };

        win {
            bindings = <&kp LEFT_GUI>;
            key-positions = <55 52>;
            timeout-ms = <100>;
            slow-release;
        };

        base {
            bindings = <&base>;
            key-positions = <27 32>;
        };
    };

    behaviors {
        http: http {
            compatible = "zmk,behavior-hold-tap";
            label = "HTTP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        htsl: htsl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSL";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSK";
            bindings = <&skqr>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        hthp: hthp {
            compatible = "zmk,behavior-hold-tap";
            label = "HTHP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: tog_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        skqr: skqr {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQR";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            lazy;
            ignore-modifiers;
            release-after-ms = <1500>;
        };

        hidenumctrlx: hidenumctrlx {
            compatible = "zmk,behavior-hold-tap";
            label = "HIDENUMCTRLX";
            bindings = <&hidenumctrl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        rospech: russopechato {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_ALT) &tog 1>;
            label = "RUSSOPECHATO";
        };

        rospech_mac: rospech_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 1>;
            label = "ROSPECH_MAC";
        };

        space_base: space_base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 0>, <&tog_off 4 &tog_off 3 &kp SPACE>;

            label = "SPACE_BASE";
        };

        base: base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 0>, <&tog_off 4 &tog_off 3>;

            label = "BASE";
        };

        hidenumctrl: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 0>,
                <&tog 3>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_pause_for_release>,
                <&tog 3>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE           &kp HOME   &kp PAGE_UP   &kp PAGE_DOWN       &kp END            &kp INSERT                                &kp K_APP     &kp LEFT_ARROW    &kp UP_ARROW         &kp DOWN      &kp RIGHT      &kp DEL
&kp TAB             &kp Q      &htsl 5 W     &kp F               &kp P              &kp B                                     &kp J         &kp L             &http COLON U        &htsl 3 Y     &kp SEMICOLON  &kp BACKSPACE
&hthp LCTRL ESCAPE  &htsl 4 A  &htsk LALT R  &htsk LEFT_SHIFT S  &htsk LCTRL T      &kp G                                     &kp M         &htsk LCTRL N     &htsk RIGHT_SHIFT E  &htsk LALT I  &htsl 4 O      &kp SQT
&kp LSHIFT          &kp Z      &kp X         &kp C               &htsk LEFT_META D  &kp V       &kp PRINTSCREEN    &kp MINUS  &kp K         &htsk LEFT_WIN H  &kp COMMA            &kp PERIOD    &kp FSLH       &kp BACKSLASH
                                             &kp LEFT_ALT        &kp AT_SIGN        &sl 3       &kp SPACE          &kp ENTER  &lt 4 ESCAPE  &kp LEFT_WIN      &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans        &trans              &trans             &trans                    &trans  &trans             &trans               &trans            &trans             &trans
&trans  &trans  &trans        &kp E               &kp R              &kp T                     &kp Y   &kp U              &http COLON I        &htsl 3 O         &kp P              &trans
&trans  &trans  &htsk LALT S  &htsk LEFT_SHIFT D  &htsk LCTRL F      &trans                    &kp H   &htsk RCTRL J      &htsk RIGHT_SHIFT K  &htsk LEFT_ALT L  &htsl 4 SEMICOLON  &trans
&trans  &trans  &trans        &trans              &htsk LEFT_META V  &kp B   &trans    &trans  &kp N   &htsk LEFT_META M  &trans               &trans            &trans             &trans
                              &trans              &trans             &trans  &trans    &trans  &trans  &trans             &trans
            >;
        };

        game {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &trans
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LCTRL  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                           &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &trans            &trans               &trans                     &trans                &trans                    &trans  &trans                    &trans                     &trans               &trans      &trans
&trans  &kp F1            &kp F2               &kp F3                     &kp F4                &kp F5                    &kp F8  &kp F9                    &kp F10                    &kp F11              &kp F12     &trans
&trans  &htsl 4 NUMBER_1  &htsk LALT NUMBER_2  &htsk LEFT_SHIFT NUMBER_3  &htsk LCTRL NUMBER_4  &kp F6                    &kp F7  &hidenumctrlx 0 NUMBER_7  &htsk LEFT_SHIFT NUMBER_8  &htsk LALT NUMBER_9  &htsl 4 N0  &trans
&trans  &trans            &trans               &trans                     &kp N5                &trans  &trans    &trans  &trans  &kp NUMBER_6              &trans                     &trans               &trans      &trans
                                               &trans                     &trans                &trans  &trans    &trans  &trans  &trans                    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym {
            bindings = <
&trans  &kp C_BRI_DEC  &kp C_BRI_UP  &kp C_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                    &trans     &out OUT_TOG          &bt BT_PRV             &bt BT_NXT  &bt BT_CLR  &trans
&trans  &trans         &kp ASTRK     &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans                             &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI    &trans      &trans
&trans  &kp EXCL       &kp AMPS      &kp POUND         &kp DOLLAR         &kp PERCENT                        &kp CARET  &kp MINUS             &kp UNDER              &kp PLUS    &kp APOS    &trans
&trans  &trans         &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans           &trans    &trans  &trans     &kp DOUBLE_QUOTES     &kp EQUAL              &kp PERIOD  &trans      &trans
                                     &trans            &trans             &trans           &trans    &trans  &trans     &trans                &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans     &trans      &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N0    &kp UNDER  &kp DOLLAR  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT  &kp UP     &kp DOWN    &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp HOME  &kp PG_UP  &kp PG_DN   &kp END    &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
