/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        http: http {
            compatible = "zmk,behavior-hold-tap";
            label = "HTTP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        hthp200: hthp200 {
            compatible = "zmk,behavior-hold-tap";
            label = "HTHP200";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 43 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57 52 51 50>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 55 56 57>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        dctrlv: dctrlv {
            compatible = "zmk,behavior-mod-morph";
            label = "DCTRLV";
            bindings = <&kp D>, <&kp V>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        vctrld: vctrld {
            compatible = "zmk,behavior-mod-morph";
            label = "VCTRLD";
            bindings = <&kp V>, <&kp D>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        lt3esctog3: lt3esctog3 {
            compatible = "zmk,behavior-mod-morph";
            label = "LT3ESCTOG3";
            bindings = <&lt 0 ESCAPE>, <&tog 0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        lt2tabtog2: lt2tabtog2 {
            compatible = "zmk,behavior-mod-morph";
            label = "LT2TABTOG2";
            bindings = <&lt 2 TAB>, <&tog 2>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        altreset: altreset {
            compatible = "zmk,behavior-mod-morph";
            label = "ALTRESET";
            bindings = <&kpto LALT 0>, <&kp LALT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_RCTL|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL|MOD_RCTL|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
        };

        kpto: kpto {
            compatible = "zmk,behavior-hold-tap";
            label = "KPTO";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-unless-interrupted";
        };
    };

    macros {
        rospech: russopechato {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_ALT) &tog 1>;
            label = "RUSSOPECHATO";
        };

        tmuxzoom: tmuxzoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp Z>;
            label = "TMUXZOOM";
        };

        rospech_mac: rospech_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 1>;
            label = "ROSPECH_MAC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE   &kp HOME  &kp PAGE_UP       &kp PAGE_DOWN           &kp END            &trans                                   &trans        &kp LEFT_ARROW      &kp UP_ARROW              &kp DOWN               &kp RIGHT      &trans
&kp ESCAPE  &kp Q     &kp W             &kp F                   &kp P              &kp B                                    &kp J         &kp L               &http COLON U             &kp Y                  &kp SEMICOLON  &bksp_del
&kp LCTRL   &lt 4 A   &hrm_left LALT R  &hrm_left LEFT_SHIFT S  &hrm_left LCTRL T  &kp G                                    &kp M         &hrm_right LCTRL N  &hrm_right RIGHT_SHIFT E  &hrm_right LEFT_ALT I  &lt 4 O        &kp SQT
&kp LSHIFT  &kp Z     &kp X             &kp C                   &dctrlv            &vctrld    &kp PRINTSCREEN    &kp RCTRL  &kp K         &kp H               &kp COMMA                 &kp PERIOD             &kp FSLH       &hthp200 RSHIFT BACKSLASH
                                        &altreset               &kp LEFT_WIN       &lt 2 TAB  &kp SPACE          &lt 5 RET  &lt 2 ESCAPE  &trans              &kp CAPS
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans            &trans                  &trans             &trans                    &trans  &trans              &trans                    &trans             &trans                          &trans
&trans  &trans  &trans            &kp E                   &kp R              &kp T                     &kp Y   &kp U               &kp I                     &kp O              &kp P                           &trans
&trans  &trans  &hrm_left LALT S  &hrm_left LEFT_SHIFT D  &hrm_left LCTRL F  &trans                    &kp H   &hrm_right RCTRL J  &hrm_right RIGHT_SHIFT K  &hrm_right RALT L  &hrm_right RIGHT_WIN SEMICOLON  &trans
&trans  &trans  &trans            &trans                  &kp V              &kp B   &trans    &trans  &kp N   &kp M               &trans                    &trans             &trans                          &trans
                                  &trans                  &trans             &trans  &trans    &trans  &trans  &trans              &trans
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans        &none           &none                    &none                      &none                     &trans                              &trans  &trans               &trans                    &trans              &trans    &trans
&tog 3        &kp F2          &kp F3                   &kp F4                     &kp F5                    &kp F6                              &kp F7  &kp F8               &kp F9                    &kp F10             &kp F11   &trans
&rospech      &lt 4 NUMBER_1  &hrm_left LALT NUMBER_2  &hrm_left LSHIFT NUMBER_3  &hrm_left LCTRL NUMBER_4  &kp N5                              &kp N6  &hrm_right LCTRL N7  &hrm_right LEFT_SHIFT N8  &hrm_right LALT N9  &lt 4 N0  &kp K_APP
&rospech_mac  &kp F1          &trans                   &trans                     &trans                    &trans  &bt BT_CLR    &out OUT_TOG  &trans  &trans               &trans                    &trans              &kp F12   &trans
                                                       &trans                     &trans                    &trans  &trans        &trans        &trans  &bt BT_NXT           &bt BT_PRV
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_5 {
            bindings = <
&trans        &none           &none                    &none                      &none                     &trans                    &trans  &trans               &trans                    &trans              &trans    &trans
&tog 3        &kp F2          &kp F3                   &kp F4                     &kp F5                    &kp F6                    &kp F7  &kp F8               &kp F9                    &kp F10             &kp F11   &trans
&rospech      &lt 4 NUMBER_1  &hrm_left LALT NUMBER_2  &hrm_left LSHIFT NUMBER_3  &hrm_left LCTRL NUMBER_4  &kp N5                    &kp N6  &hrm_right LCTRL N7  &hrm_right LEFT_SHIFT N8  &hrm_right LALT N9  &lt 4 N0  &kp K_APP
&rospech_mac  &kp F1          &trans                   &trans                     &trans                    &trans  &trans    &trans  &trans  &trans               &trans                    &trans              &kp F12   &trans
                                                       &trans                     &trans                    &trans  &trans    &trans  &trans  &trans               &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        omega_brain {
            bindings = <
&trans  &trans                 &trans                &trans            &trans         &trans                         &trans        &trans             &trans          &trans           &trans     &trans
&trans  &trans                 &kp RIGHT_BRACKET     &kp LEFT_BRACKET  &kp AMPERSAND  &kp AT_SIGN                    &kp ASTERISK  &kp EXCL           &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans     &trans
&trans  &kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp COMMA         &kp PERIOD     &kp PERCENT                    &kp COLON     &kp MINUS          &kp UNDER       &kp PLUS         &kp EQUAL  &trans
&trans  &trans                 &kp GREATER_THAN      &kp LESS_THAN     &kp DOLLAR     &kp POUND    &trans    &trans  &kp CARET     &kp DOUBLE_QUOTES  &kp SQT         &trans           &trans     &trans
                                                     &trans            &trans         &trans       &trans    &trans  &trans        &trans             &trans
            >;
        };

        f_layer {
            bindings = <
&trans      &trans      &trans                     &trans                       &trans                  &trans                        &trans      &trans                   &trans                        &trans                       &trans       &trans
&kp LA(F1)  &kp LA(F2)  &kp LA(F3)                 &kp LA(F4)                   &kp LA(F5)              &kp LA(F6)                    &kp LA(F7)  &kp LA(F8)               &kp LA(F9)                    &kp LA(F10)                  &kp LA(F11)  &kp LA(F12)
&kp LS(F1)  &kp LS(F2)  &hrm_left LEFT_ALT LS(F3)  &hrm_left LEFT_SHIFT LS(F4)  &hrm_left LCTRL LS(F5)  &kp LS(F6)                    &kp LS(F7)  &hrm_right LCTRL LS(F8)  &hrm_right LEFT_SHIFT LS(F9)  &hrm_right LEFT_ALT LS(F10)  &kp LS(F11)  &kp LS(F12)
&kp LC(F1)  &kp LC(F2)  &kp LC(F3)                 &kp LC(F4)                   &kp LC(F5)              &kp LC(F6)  &trans    &trans  &kp LC(F7)  &kp LC(F8)               &kp LC(F9)                    &kp LC(F10)                  &kp LC(F11)  &kp LC(F12)
                                                   &trans                       &trans                  &trans      &trans    &trans  &trans      &trans                   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        gigabrainactivation {
            if-layers = <2 4>;
            then-layer = <4>;
        };
    };
};
