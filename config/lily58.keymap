/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_tog_numbers {
            bindings = <&tog 5>;
            key-positions = <27 32>;
            require-prior-idle-ms = <200>;
        };

        combo_space {
            bindings = <&kp SPACE>;
            key-positions = <31 28>;
        };

        combo_rospech {
            bindings = <&rospech>;
            key-positions = <14 21>;
            layers = <0 2>;
        };

        combo_tog_nav_r {
            bindings = <&tog 8>;
            key-positions = <32 55>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <26 33>;
        };

        combo_tog_nav {
            bindings = <&tog 8>;
            key-positions = <35 24>;
        };

        combo_rospech_macos {
            bindings = <&rospech_mac>;
            key-positions = <14 21>;
            layers = <1 3>;
        };

        combo_tog_mac {
            bindings = <&tog 1>;
            key-positions = <42 43>;
        };

        combo_caps {
            bindings = <&caps_word>;
            key-positions = <15 20>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <26 32>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <27 33>;
        };

        combo_sticky_ctrl_shift {
            bindings = <&sk LS(LCTRL)>;
            key-positions = <16 19>;
        };
    };

    behaviors {
        http: http {
            compatible = "zmk,behavior-hold-tap";
            label = "HTTP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        hrm_left_index: hrm_left_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_INDEX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 43 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 52 51 50>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        hrm_right_index: hrm_right_index {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT_INDEX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 55 56 57>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        ltr: ltr {
            compatible = "zmk,behavior-hold-tap";
            label = "LTR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 43 55 56 57>;
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
        };

        ltl: ltl {
            compatible = "zmk,behavior-hold-tap";
            label = "LTL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 42 52 51 50>;
        };

        hrm_left_ring: hrm_left_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_RING";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 43 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 52 51 50>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        hrm_left_middle: hrm_left_middle {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_MIDDLE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 43 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 52 51 50>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        hrm_right_ring: hrm_right_ring {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT_RING";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 55 56 57>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        hrm_right_middle: hrm_right_middle {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT_MIDDLE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 55 56 57>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        lt_tui: lt_tui {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TUI";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
        };
    };

    macros {
        rospech: russopechato {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_ALT) &tog 2>;
            label = "RUSSOPECHATO";
        };

        rospech_mac: rospech_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 2>;
            label = "ROSPECH_MAC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE   &kp HOME  &kp PAGE_UP            &kp PAGE_DOWN                  &kp END                  &kp INSERT                                   &kp K_APP     &kp LEFT_ARROW            &kp UP_ARROW                     &kp DOWN                &kp RIGHT      &kp DEL
&kp TAB     &kp Q     &lt_tui 4 W            &http UNDER F                  &kp P                    &kp B                                        &kp J         &kp L                     &http COLON U                    &lt_tui 4 Y             &kp SEMICOLON  &kp BACKSPACE
&kp LCTRL   &ltl 6 A  &hrm_left_ring LALT R  &hrm_left_middle LEFT_SHIFT S  &hrm_left_index LCTRL T  &kp G                                        &kp M         &hrm_right_index LCTRL N  &hrm_right_middle RIGHT_SHIFT E  &hrm_right_ring LALT I  &ltr 6 O       &hrm_right_ring LEFT_GUI SQT
&kp LSHIFT  &kp Z     &kp X                  &kp C                          &kp D                    &kp V       &kp PRINTSCREEN    &kp CAPSLOCK  &kp K         &kp H                     &kp COMMA                        &kp PERIOD              &kp FSLH       &kp BACKSLASH
                                             &kp LEFT_ALT                   &kp LEFT_WIN             &lt 4 TAB   &kp SPACE          &lt 7 RET     &lt 4 ESCAPE  &kp RIGHT_GUI             &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        macos {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans                    &trans  &trans                       &trans  &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans                    &trans  &trans                       &trans  &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &hrm_left_index LEFT_GUI T  &trans                    &trans  &hrm_right_index LEFT_GUI N  &trans  &hrm_right_ring LCTRL I  &trans  &hrm_right_ring LALT SQT
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans  &trans                       &trans  &trans                   &trans  &trans
                        &trans  &trans                      &trans  &trans    &trans  &trans  &trans                       &trans
            >;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans                  &trans                        &trans                   &trans                    &trans  &trans                    &trans                          &trans                       &trans            &trans
&trans  &trans  &trans                  &kp E                         &kp R                    &kp T                     &kp Y   &kp U                     &kp I                           &kp O                        &kp P             &trans
&trans  &trans  &hrm_left_index LALT S  &hrm_left_index LEFT_SHIFT D  &hrm_left_index LCTRL F  &trans                    &kp H   &hrm_right_index RCTRL J  &hrm_right_index RIGHT_SHIFT K  &hrm_right_index LEFT_ALT L  &ltr 6 SEMICOLON  &trans
&trans  &trans  &trans                  &trans                        &kp V                    &kp B   &trans    &trans  &kp N   &kp M                     &trans                          &trans                       &trans            &trans
                                        &trans                        &trans                   &trans  &trans    &trans  &trans  &trans                    &trans
            >;
        };

        mac_qwerty {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans                    &trans  &trans                       &trans  &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans                    &trans  &trans                       &trans  &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &hrm_left_index LEFT_WIN F  &trans                    &trans  &hrm_right_index LEFT_GUI J  &trans  &hrm_right_ring LCTRL L  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans  &trans                       &trans  &trans                   &trans  &trans
                        &trans  &trans                      &trans  &trans    &trans  &trans  &trans                       &trans
            >;
        };

        nuUuUmbers {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&tog 1        &kp LG(N1)        &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)                              &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)  &trans
&tog 5        &kp LC(NUMBER_1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)                              &kp LC(N6)  &kp LC(N7)  &kp LC(N8)  &kp LC(N9)  &kp LC(N0)  &trans
&rospech      &ltl 6 NUMBER_1   &kp N2      &kp N3      &kp N4      &kp N5                                  &kp N6      &kp N7      &kp N8      &kp N9      &ltr 6 N0   &trans
&rospech_mac  &kp LA(N1)        &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)  &bt BT_CLR    &out OUT_TOG  &kp LA(N6)  &kp LA(N7)  &kp LA(N8)  &kp LA(N9)  &kp LA(N0)  &trans
                                            &trans      &trans      &trans      &trans        &trans        &trans      &bt BT_PRV  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numbers {
            bindings = <
&trans  &trans        &trans  &trans  &trans  &trans                    &trans  &trans        &trans  &trans  &trans  &trans
&tog 5  &trans        &mo 6   &trans  &trans  &trans                    &trans  &trans        &trans  &mo 6   &trans  &trans
&trans  &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &trans                    &trans  &kp N7        &kp N8  &kp N9  &kp N0  &trans
&trans  &trans        &trans  &trans  &kp N5  &trans  &trans    &trans  &trans  &kp NUMBER_6  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        omega_brain {
            bindings = <
&trans  &trans     &trans                &trans          &trans            &trans                         &trans    &trans             &trans           &trans                 &trans     &trans
&trans  &trans     &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp CARET                      &trans    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans     &trans
&trans  &kp COLON  &kp AMPS              &kp POUND       &kp ASTERISK      &kp PERCENT                    &trans    &kp MINUS          &kp UNDER        &kp PLUS               &kp EQUAL  &trans
&trans  &trans     &trans                &kp AT          &kp DOLLAR        &trans       &trans    &trans  &kp EXCL  &kp DOUBLE_QUOTES  &kp COMMA        &kp PERIOD             &trans     &trans
                                         &trans          &trans            &trans       &trans    &trans  &kp CLCK  &trans             &trans
            >;
        };

        f_layer {
            bindings = <
&kp F1      &kp F2      &kp F3                           &kp F4                             &kp F5                        &kp F6                        &kp F7      &kp F8                         &kp F9                              &kp F10                            &kp F11      &kp F12
&kp LA(F1)  &kp LA(F2)  &kp LA(F3)                       &kp LA(F4)                         &kp LA(F5)                    &kp LA(F6)                    &kp LA(F7)  &kp LA(F8)                     &kp LA(F9)                          &kp LA(F10)                        &kp LA(F11)  &kp LA(F12)
&kp LS(F1)  &kp LS(F2)  &hrm_left_index LEFT_ALT LS(F3)  &hrm_left_index LEFT_SHIFT LS(F4)  &hrm_left_index LCTRL LS(F5)  &kp LS(F6)                    &kp LS(F7)  &hrm_right_index LCTRL LS(F8)  &hrm_right_index LEFT_SHIFT LS(F9)  &hrm_right_index LEFT_ALT LS(F10)  &kp LS(F11)  &kp LS(F12)
&kp LC(F1)  &kp LC(F2)  &kp LC(F3)                       &kp LC(F4)                         &kp LC(F5)                    &kp LC(F6)  &trans    &trans  &kp LC(F7)  &kp LC(F8)                     &kp LC(F9)                          &kp LC(F10)                        &kp LC(F11)  &kp LC(F12)
                                                         &trans                             &trans                        &trans      &trans    &trans  &trans      &trans                         &trans
            >;
        };

        navega {
            bindings = <
&trans  &kp C_MUTE    &kp C_VOL_DN     &kp C_VOL_UP    &kp C_BRI_DN  &kp C_BRI_UP                    &trans  &trans    &trans        &trans     &trans         &trans
&trans  &trans        &kp LC(LS(TAB))  &kp LC(TAB)     &trans        &trans                          &trans  &kp HOME  &kp UP_ARROW  &kp END    &kp PG_UP      &trans
&trans  &kp LEFT_GUI  &kp LALT         &kp LEFT_SHIFT  &kp LCTRL     &trans                          &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &trans
&trans  &trans        &trans           &trans          &trans        &trans        &trans    &trans  &trans  &trans    &trans        &trans     &trans         &trans
                                       &trans          &trans        &trans        &trans    &trans  &trans  &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mac_qwerty {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
