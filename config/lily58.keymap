/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&tog 1>;
            key-positions = <52 55>;
        };
    };

    behaviors {
        togmo: togmo {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGMO";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <400>;
        };

        layer_dance: layer_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_DANCE";
            #binding-cells = <0>;
            bindings = <&togmo 3 3>, <&togmo 4 4>;

            tapping-term-ms = <400>;
        };

        mod_layers_r: mod_layers_r {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_LAYERS_R";
            bindings = <&togmo 3 3>, <&togmo 4 4>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        hthp: hthp {
            compatible = "zmk,behavior-hold-tap";
            label = "HTHP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "hold-preferred";
        };

        http: http {
            compatible = "zmk,behavior-hold-tap";
            label = "HTTP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC           &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                         &kp MINUS      &kp AMPERSAND  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp TAB           &kp Q            &kp W        &kp F      &kp P       &kp B                               &kp J          &kp L          &kp U      &kp Y                 &kp SEMICOLON          &kp BACKSPACE
&kp LCTRL         &kp A            &kp R        &kp S      &kp T       &kp G                               &kp M          &http M N      &kp E      &kp I                 &kp O                  &kp SQT
&hthp LSHFT CLCK  &kp Z            &kp X        &kp C      &kp D       &kp V        &kp LBKT     &kp RBKT  &kp K          &kp H          &kp COMMA  &kp DOT               &kp FSLH               &hthp RSHIFT BACKSLASH
                                                &kp LALT   &kp LGUI    &togmo 2 2   &kp SPACE    &kp RET   &mod_layers_r  &kp GRAVE      &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I   &kp O   &kp P          &trans
&trans  &trans  &kp S   &kp D   &kp F   &trans                    &kp H   &kp J   &kp K   &kp L   &kp SEMICOLON  &trans
&trans  &trans  &trans  &trans  &kp V   &kp B   &trans    &trans  &kp N   &kp M   &trans  &trans  &trans         &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4    &kp F5   &kp F6                       &kp F7             &kp F8   &kp F9    &kp F10    &kp F11    &kp F12
&trans  &kp N1     &kp N2     &kp N3    &kp N4   &kp N5                       &kp N6             &kp N7   &kp N8    &kp N9     &kp N0     &trans
&trans  &kp LCTRL  &kp LSHFT  &kp LALT  &kp TAB  &kp SPACE                    &kp SPACE          &kp TAB  &kp RALT  &kp RSHFT  &kp RCTRL  &trans
&trans  &trans     &trans     &trans    &trans   &trans     &trans    &trans  &trans             &trans   &trans    &trans     &trans     &trans
                              &trans    &trans   &trans     &trans    &trans  &hthp UNDER MINUS  &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_SUBTRACT                    &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3   &bt BT_SEL 4
&trans  &trans  &kp KP_N7        &kp KP_N8        &kp KP_N9        &kp KP_PLUS                        &kp RCTRL   &kp RIGHT_ALT  &kp UP_ARROW  &kp LC(LS(TAB))  &kp LC(TAB)    &trans
&trans  &trans  &kp KP_N4        &kp KP_N5        &kp KP_N6        &trans                             &kp HOME    &kp LEFT       &kp DOWN      &kp RIGHT        &kp PG_UP      &trans
&trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans           &trans    &trans  &kp END     &trans         &kp EQUAL     &kp LBKT         &kp PAGE_DOWN  &kp BSLH
                                 &kp KP_N0        &trans           &trans           &trans    &trans  &tog 3      &kp DELETE     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numi-numi {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp N7  &kp N8  &kp N9   &kp FSLH   &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp KP_NUMLOCK  &kp N4  &kp N5  &kp N6   &kp STAR   &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp N1  &kp N2  &kp N3   &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &kp N0  &kp N0  &kp DOT  &kp PLUS   &trans
                        &trans  &trans  &trans  &trans    &trans  &tog 4          &trans  &trans
            >;
        };
    };
};
